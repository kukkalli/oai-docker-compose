#!/bin/bash

# Source the environment variables
# shellcheck disable=SC2046
source $(pwd)/env_var

# Turn off any running docker compose
docker compose down

# remove existing files
sudo rm -f startup.log
sudo rm -f config.yaml

# Display the env_var file
cat env_var >> startup.log

# shellcheck disable=SC2129
# shellcheck disable=SC2046
cat > $(pwd)/smf.conf << EOF
################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under
# the OAI Public License, Version 1.1  (the "License"); you may not use this file
# except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.openairinterface.org/?page_id=698
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      contact@openairinterface.org
################################################################################

SMF =
{
    # FQDN          = "oai-smf-svc";
    FQDN          = "${SMF_FQDN}";
    INSTANCE      = 0;         # 0 is the default
    PID_DIRECTORY = "/var/run";  # /var/run is the default
    LOG_LEVEL     = "debug";

    INTERFACES :
    {
        N4 :
        {
            # SMF binded interface for N4 communication (UPF)
            INTERFACE_NAME = "eth0"; # YOUR NETWORK CONFIG HERE
            IPV4_ADDRESS   = "read";
         };

        SBI :
        {
            # SMF binded interface for SBI interface (e.g., communication with AMF, UDM)
            INTERFACE_NAME = "eth0";     # YOUR NETWORK CONFIG HERE
            IPV4_ADDRESS   = "read";
            # YOUR NETWORK CONFIG HERE (default: 80)
            PORT           = ${SMF_PORT_FOR_SBI};
            # YOUR NETWORK CONFIG HERE (default: 8080)
            HTTP2_PORT     = ${SMF_HTTP2_PORT_FOR_SBI};
            # YOUR NETWORK CONFIG HERE (default: v1)
            API_VERSION    = "${SMF_API_VERSION_FOR_SBI}";
         };

    };

    # DNN configurations with pool of UE assigned IP addresses
    # Do not make IP pools overlap
    # first IPv4 address X.Y.Z.1 is reserved for GTP network device on UPF
    DNN_LIST = (
       # PDU_SESSION_TYPE choice in {IPv4, IPv6, IPv4v6}
       # DNN IP ADDRESS RANGE format is for example: "12.2.1.2 - 12.2.1.128"
      {
        DNN_NI = "${DNN_NI0}";
        PDU_SESSION_TYPE = "${TYPE0}";
        IPV4_RANGE = "${DNN_RANGE0}";
        IPV6_PREFIX = "2001:1:2::/64"
      }
      ,{
        DNN_NI = "${DNN_NI1}";
        PDU_SESSION_TYPE = "${TYPE1}";
        IPV4_RANGE = "${DNN_RANGE1}";
        IPV6_PREFIX = "2001:1:2::/64"
      }
      ,{
        DNN_NI = "${DNN_NI2}";
        PDU_SESSION_TYPE = "${TYPE2}";
        IPV4_RANGE = "${DNN_RANGE2}";
        IPV6_PREFIX = "2001:1:2::/64"
      }
    );

    # DNS address communicated to UEs
    DEFAULT_DNS_IPV4_ADDRESS     = "${DEFAULT_DNS_IPV4_ADDRESS}";      # YOUR DNS CONFIG HERE
    DEFAULT_DNS_SEC_IPV4_ADDRESS = "${DEFAULT_DNS_SEC_IPV4_ADDRESS}";  # YOUR DNS CONFIG HERE
    DEFAULT_DNS_IPV6_ADDRESS     = "2001:4860:4860::8888";            # YOUR DNS CONFIG HERE
    DEFAULT_DNS_SEC_IPV6_ADDRESS = "2001:4860:4860::8844";            # YOUR DNS CONFIG HERE

    #Default P-CSCF server
    DEFAULT_CSCF_IPV4_ADDRESS = "${DEFAULT_CSCF_IPV4_ADDRESS}";
    DEFAULT_CSCF_IPV6_ADDRESS = "fe80::7915:f408:1787:db8b";

    #Default UE MTU
    UE_MTU = ${UE_MTU};

    # SUPPORT FEATURES
    SUPPORT_FEATURES:
    {
      # STRING, {"yes", "no"},
      # Set to yes if SMF resgisters to an NRF
      REGISTER_NRF = "yes";
      # Set to yes to enable UPF discovery and selection
      DISCOVER_UPF = "yes";
      # Set to yes to enable PCF discovery and selection
      DISCOVER_PCF = "no";
      # Non standard feature, normally should be set to "no",
      # but you may need to set to yes for UE that do not explicitly request a PDN address through NAS signalling
      FORCE_PUSH_PROTOCOL_CONFIGURATION_OPTIONS = "no";
      # Set to yes if SMF uses local subscription information instead of from an UDM
      USE_LOCAL_SUBSCRIPTION_INFO = "yes";
      # Set to yes if SMF uses local PCC rules instead of from an PCF
      USE_LOCAL_PCC_RULES = "yes";
      # Set to yes if AMF/UDM/NRF/UPF will relying on a DNS to resolve FQDN
      USE_FQDN_DNS = "yes";
      # Default: 1
      HTTP_VERSION = 1;
      # Set yes if UE USAGE REPORTING is to be done at UPF
      ENABLE_USAGE_REPORTING = "no"
      # Set yes if Downlink PDR is to be included in PFCP session establishment message
      ENABLE_DL_PDR_IN_PFCP_SESS_ESTAB = "no"
      # Set N3_LOCAL_IPV4_ADDRESS for SD-Fabric UPF
      N3_LOCAL_IPV4_ADDRESS = "0.0.0.0";
    }

    AMF :
    {
      IPV4_ADDRESS = "${AMF_IPV4_ADDRESS}";
      PORT         = ${AMF_PORT};
      API_VERSION  = "${AMF_API_VERSION}";
      FQDN         = "${AMF_FQDN}"
    };

    UDM :
    {
      IPV4_ADDRESS = "${UDM_IPV4_ADDRESS}";
      PORT         = 80;
      API_VERSION  = "v1";
      FQDN         = "${UDM_FQDN}"
    };

    NRF :
    {
      IPV4_ADDRESS = "${NRF_IPV4_ADDRESS}";
      PORT         = 80;
      API_VERSION  = "v1";
      FQDN         = "${NRF_FQDN}"
    };

    PCF :
    {
      IPV4_ADDRESS = "0.0.0.0";
      PORT         = 80;
      API_VERSION  = "v1";
      FQDN         = "localhost"
    };

    UPF_LIST = (
      {
        IPV4_ADDRESS = "${UPF_IPV4_ADDRESS}";
        FQDN         = "${UPF_FQDN_0}";
        NWI_LIST     = (
          {
            DOMAIN_ACCESS  = "access.oai.org",
            DOMAIN_CORE    = "core.oai.org"
          }
        )
      }
    );

    LOCAL_CONFIGURATION :
    {
      SESSION_MANAGEMENT_SUBSCRIPTION_LIST = (
         {
           NSSAI_SST = ${SM_01_NSSAI_SST},
           NSSAI_SD = "${SM_01_NSSAI_SD}",
           DNN = "${SM_01_DNN}",
           DEFAULT_SESSION_TYPE = "${SM_01_DEFAULT_SESSION_TYPE}",
           DEFAULT_SSC_MODE = ${SM_01_DEFAULT_SSC_MODE},
           QOS_PROFILE_5QI = ${SM_01_QOS_PROFILE_5QI},
           QOS_PROFILE_PRIORITY_LEVEL = ${SM_01_QOS_PROFILE_PRIORITY_LEVEL},
           QOS_PROFILE_ARP_PRIORITY_LEVEL = ${SM_01_QOS_PROFILE_ARP_PRIORITY_LEVEL},
           QOS_PROFILE_ARP_PREEMPTCAP = "${SM_01_QOS_PROFILE_ARP_PREEMPTCAP}",
           QOS_PROFILE_ARP_PREEMPTVULN = "${SM_01_QOS_PROFILE_ARP_PREEMPTVULN}",
           SESSION_AMBR_UL = "${SM_01_SESSION_AMBR_UL}",
           SESSION_AMBR_DL = "${SM_01_SESSION_AMBR_DL}"
         }
         ,{
           NSSAI_SST = ${SM_02_NSSAI_SST},
           NSSAI_SD = "${SM_02_NSSAI_SD}",
           DNN = "${SM_02_DNN}",
           DEFAULT_SESSION_TYPE = "${SM_02_DEFAULT_SESSION_TYPE}",
           DEFAULT_SSC_MODE = ${SM_02_DEFAULT_SSC_MODE},
           QOS_PROFILE_5QI = ${SM_02_QOS_PROFILE_5QI},
           QOS_PROFILE_PRIORITY_LEVEL = ${SM_02_QOS_PROFILE_PRIORITY_LEVEL},
           QOS_PROFILE_ARP_PRIORITY_LEVEL = ${SM_02_QOS_PROFILE_ARP_PRIORITY_LEVEL},
           QOS_PROFILE_ARP_PREEMPTCAP = "${SM_02_QOS_PROFILE_ARP_PREEMPTCAP}",
           QOS_PROFILE_ARP_PREEMPTVULN = "${SM_02_QOS_PROFILE_ARP_PREEMPTVULN}",
           SESSION_AMBR_UL = "${SM_02_SESSION_AMBR_UL}",
           SESSION_AMBR_DL = "${SM_02_SESSION_AMBR_DL}"
         }
         ,{
           NSSAI_SST = ${SM_03_NSSAI_SST},
           NSSAI_SD = "${SM_03_NSSAI_SD}",
           DNN = "${SM_03_DNN}",
           DEFAULT_SESSION_TYPE = "${SM_03_DEFAULT_SESSION_TYPE}",
           DEFAULT_SSC_MODE = ${SM_03_DEFAULT_SSC_MODE},
           QOS_PROFILE_5QI = ${SM_03_QOS_PROFILE_5QI},
           QOS_PROFILE_PRIORITY_LEVEL = ${SM_03_QOS_PROFILE_PRIORITY_LEVEL},
           QOS_PROFILE_ARP_PRIORITY_LEVEL = ${SM_03_QOS_PROFILE_ARP_PRIORITY_LEVEL},
           QOS_PROFILE_ARP_PREEMPTCAP = "${SM_03_QOS_PROFILE_ARP_PREEMPTCAP}",
           QOS_PROFILE_ARP_PREEMPTVULN = "${SM_03_QOS_PROFILE_ARP_PREEMPTVULN}",
           SESSION_AMBR_UL = "${SM_03_SESSION_AMBR_UL}",
           SESSION_AMBR_DL = "${SM_03_SESSION_AMBR_DL}"
         }
        );
    };

};

EOF

# shellcheck disable=SC2035
# shellcheck disable=SC2046
sudo chown ubuntu:ubuntu $(pwd)/*

# Pull the docker image
docker pull "${IMAGE_NAME}"

./wait_for_dependencies

docker compose up -d

exit
