################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under
# the OAI Public License, Version 1.1  (the "License"); you may not use this file
# except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.openairinterface.org/?page_id=698
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      contact@openairinterface.org
################################################################################
SPGW-U =
{
    # FQDN for 4G
    FQDN = "oai-spgwu-tiny";
    #"gw.spgw.node.epc.mnc.mcc.";
    # 0 is the default
    INSTANCE      = 0;
    # /var/run is the default
    PID_DIRECTORY = "/var/run";
    LOG_LEVEL     = "debug";

    #ITTI_TASKS :
    #{
        #ITTI_TIMER_SCHED_PARAMS :
        #{
            #CPU_ID       = 1;
            #SCHED_POLICY = "SCHED_FIFO"; # Values in { SCHED_OTHER, SCHED_IDLE, SCHED_BATCH, SCHED_FIFO, SCHED_RR }
            #SCHED_PRIORITY = 85;
        #};
        #S1U_SCHED_PARAMS :
        #{
            #CPU_ID       = 1;
            #SCHED_POLICY = "SCHED_FIFO"; # Values in { SCHED_OTHER, SCHED_IDLE, SCHED_BATCH, SCHED_FIFO, SCHED_RR }
            #SCHED_PRIORITY = 84;
        #};
        #SX_SCHED_PARAMS :
        #{
            #CPU_ID       = 1;
            #SCHED_POLICY = "SCHED_FIFO"; # Values in { SCHED_OTHER, SCHED_IDLE, SCHED_BATCH, SCHED_FIFO, SCHED_RR }
            #SCHED_PRIORITY = 84;
        #};
        #ASYNC_CMD_SCHED_PARAMS :
        #{
            #CPU_ID       = 1;
            #SCHED_POLICY = "SCHED_FIFO"; # Values in { SCHED_OTHER, SCHED_IDLE, SCHED_BATCH, SCHED_FIFO, SCHED_RR }
            #SCHED_PRIORITY = 84;
        #};
    #};

    INTERFACES :
    {
        S1U_S12_S4_UP :
        {
            # S-GW binded interface for S1-U communication (GTPV1-U) can be ethernet interface, virtual ethernet interface, we don't advise wireless interfaces
            # STRING, interface name, YOUR NETWORK CONFIG HERE
            INTERFACE_NAME         = "eth0";
            # STRING, CIDR or "read to let app read interface configured IP address
            IPV4_ADDRESS           = "read";
            #PORT                   = 2152;                                     # Default is 2152
            SCHED_PARAMS :
            {
                #CPU_ID        = 2;
                # Values in { SCHED_OTHER, SCHED_IDLE, SCHED_BATCH, SCHED_FIFO, SCHED_RR }
                SCHED_POLICY   = "SCHED_FIFO";
                SCHED_PRIORITY = 88;
                POOL_SIZE      = 1;
            };
        };
        SX :
        {
            # S/P-GW binded interface for SX communication
            INTERFACE_NAME         = "eth0";
            IPV4_ADDRESS           = "read";
            #PORT                   = 8805;                         # Default is 8805
            SCHED_PARAMS :
            {
                #CPU_ID        = 1;
                SCHED_POLICY   = "SCHED_FIFO";
                SCHED_PRIORITY = 88;
                POOL_SIZE      = 1;
            };
        };
        SGI :
        {
           # No config to set, the software will set the SGi interface to the interface used for the default route.
            INTERFACE_NAME         = "eth0";
            IPV4_ADDRESS           = "read";
            SCHED_PARAMS :
            {
                #CPU_ID        = 3;
                SCHED_POLICY   = "SCHED_FIFO";
                SCHED_PRIORITY = 98;
                POOL_SIZE      = 1;
            };
        };
    };

    # SNAT Values in {yes, no}
    SNAT = "yes";

    PDN_NETWORK_LIST  = (
                      {NETWORK_IPV4 = "12.1.0.0/16";} # 1 ITEM SUPPORTED ONLY
                    );

    SPGW-C_LIST = (
         {IPV4_ADDRESS="127.0.0.1" ;}
    );

    NON_STANDART_FEATURES :
    {
        # 'no' for standard features, yes for enhancing UL throughput
        BYPASS_UL_PFCP_RULES = "no";
    };

    SUPPORT_5G_FEATURES:
    {
       # STRING, {"yes", "no"},
       # Set to 'yes' to support 5G Features
       ENABLE_5G_FEATURES = "yes";
       # Set to 'yes' if UPF registers to an NRF
       REGISTER_NRF       = "yes";
       # Set to 'yes' if UPF relies on a DNS/FQDN service to resolve NRF's FQDN
       USE_FQDN_NRF       = "yes";
       # Set FQDN of UPF
       UPF_FQDN_5G        = "oai-spgwu-tiny";

       NRF :
       {
          IPV4_ADDRESS = "10.11.1.41";
          # YOUR NRF CONFIG HERE (default: 80)
          PORT         = 80;
          # Set HTTP version for NRF (1 or 2). Default 1
          HTTP_VERSION = 1;
          # YOUR NRF API VERSION HERE. Default v1
          API_VERSION  = "v1";
          # Set FQDN of NRF
          FQDN         = "oai-nrf";
       };

       # Additional info to be sent to NRF for supporting Network Slicing
       UPF_INFO = (
          {
            NSSAI_SST = 1;
            NSSAI_SD = "0xFFFFFF";
            DNN_LIST = (
              {
                DNN = "oai";
              }
            );
          }
          ,{
            NSSAI_SST = 1;
            NSSAI_SD = "0xFFFFFF";
            DNN_LIST = (
              {
                DNN = "openairinterface";
              }
            );
          }
          ,{
            NSSAI_SST = 1;
            NSSAI_SD = "0xFFFFFF";
            DNN_LIST = (
              {
                DNN = "ims";
              }
            );
          }
       );
    }
};